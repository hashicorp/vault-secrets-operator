# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: vaultauths.secrets.hashicorp.com
spec:
  group: secrets.hashicorp.com
  names:
    kind: VaultAuth
    listKind: VaultAuthList
    plural: vaultauths
    singular: vaultauth
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: VaultAuth is the Schema for the vaultauths API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: VaultAuthSpec defines the desired state of VaultAuth
              properties:
                headers:
                  additionalProperties:
                    type: string
                  description: Headers to be included in all Vault requests.
                  type: object
                jwt:
                  description: JWT specific auth configuration, requires that the Method
                    be set to jwt.
                  properties:
                    audiences:
                      description: TokenAudiences to include in the ServiceAccount token.
                      items:
                        type: string
                      type: array
                    role:
                      description: Role to use for authenticating to Vault.
                      type: string
                    secretKeyRef:
                      description: SecretKeyRef to use when referencing the secret containing
                        the JWT token to authenticate to Vault's JWT authentication
                        backend.
                      properties:
                        key:
                          description: Key of the secret to select from. Must be a valid
                            secret key.
                          type: string
                        name:
                          description: Name of the secret in the referring object's
                            namespace to select from.
                          type: string
                      required:
                        - key
                        - name
                      type: object
                    serviceAccount:
                      description: ServiceAccount to use when creating a ServiceAccount
                        token to authenticate to Vault's JWT authentication backend.
                      type: string
                    tokenExpirationSeconds:
                      default: 600
                      description: TokenExpirationSeconds to set the ServiceAccount
                        token.
                      format: int64
                      minimum: 600
                      type: integer
                  required:
                    - role
                  type: object
                kubernetes:
                  description: Kubernetes specific auth configuration, requires that
                    the Method be set to kubernetes.
                  properties:
                    audiences:
                      description: TokenAudiences to include in the ServiceAccount token.
                      items:
                        type: string
                      type: array
                    role:
                      description: Role to use for authenticating to Vault.
                      type: string
                    serviceAccount:
                      description: ServiceAccount to use when authenticating to Vault's
                        kubernetes authentication backend.
                      type: string
                    tokenExpirationSeconds:
                      default: 600
                      description: TokenExpirationSeconds to set the ServiceAccount
                        token.
                      format: int64
                      minimum: 600
                      type: integer
                  required:
                    - role
                    - serviceAccount
                  type: object
                method:
                  description: Method to use when authenticating to Vault.
                  enum:
                    - kubernetes
                    - jwt
                  type: string
                mount:
                  description: Mount to use when authenticating to auth method.
                  type: string
                namespace:
                  description: Namespace to auth to in Vault
                  type: string
                params:
                  additionalProperties:
                    type: string
                  description: Params to use when authenticating to Vault
                  type: object
                storageEncryption:
                  description: 'StorageEncryption provides the necessary configuration
                  to encrypt the client storage cache. This should only be configured
                  when client cache persistence with encryption is enabled. This is
                  done by passing setting the manager''s commandline argument --client-cache-persistence-model=direct-encrypted
                  Typically there should only ever be one VaultAuth configured with
                  StorageEncryption in the Cluster, and it should have the the label:
                  cacheStorageEncryption=true'
                  properties:
                    keyName:
                      description: KeyName to use for encrypt/decrypt operations via
                        Vault Transit.
                      type: string
                    mount:
                      description: Mount path of the Transit engine in Vault.
                      type: string
                  required:
                    - keyName
                    - mount
                  type: object
                vaultConnectionRef:
                  description: VaultConnectionRef of the corresponding VaultConnection
                    CustomResource. If no value is specified the Operator will default
                    to the `default` VaultConnection, configured in its own Kubernetes
                    namespace.
                  type: string
              required:
                - method
                - mount
              type: object
            status:
              description: VaultAuthStatus defines the observed state of VaultAuth
              properties:
                error:
                  type: string
                valid:
                  description: Valid auth mechanism.
                  type: boolean
              required:
                - error
                - valid
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
