name: Tests

on: [push, workflow_dispatch]

jobs:
  get-go-version:
    name: "Determine Go toolchain version"
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.get-go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Determine Go version
        id: get-go-version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "go-version=$(cat .go-version)" >> $GITHUB_OUTPUT

  fmtcheck:
    runs-on: ubuntu-latest
    needs: [get-go-version]
    env:
      GOFUMPT_VERSION: 0.4.0
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - run: |
          go install "mvdan.cc/gofumpt@v${GOFUMPT_VERSION}"
          make fmtcheck

  test:
    runs-on: ubuntu-latest
    needs: [get-go-version]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: make ci-test

      # TODO(tvoran): replace this with CRT build workflow
      - run: make ci-docker-build
